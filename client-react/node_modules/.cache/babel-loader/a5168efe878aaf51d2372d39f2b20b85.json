{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/ItemModal.js\";\nimport { Component } from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { addToCart } from '../actions/cartActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { clearErrors } from '../actions/errorActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ItemModal extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      modal: false\n    };\n\n    this.onAddToCart = async (id, productId) => {\n      await this.props.addToCart(id, productId, 1);\n      alert('Item added to Cart');\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [console.log(this.item), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: this.item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                tag: \"h6\",\n                children: [\"Rs. \", this.item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                size: \"sm\",\n                onClick: this.onAddToCart.bind(this, this.user._id, this.item._id),\n                children: \"Add To Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nItemModal.propTypes = {\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  addToCart: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  addToCart\n})(ItemModal);","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/ItemModal.js"],"names":["Component","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","Modal","ModalHeader","ModalBody","addToCart","connect","PropTypes","clearErrors","ItemModal","state","modal","onAddToCart","id","productId","props","alert","toggle","setState","render","console","log","item","title","price","isAuthenticated","bind","user","_id","propTypes","object","isRequired","bool","func","mapStateToProps","auth","error"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport {\n    Card, CardText, CardBody, CardTitle, CardSubtitle, Button,\n    Modal,\n    ModalHeader,\n    ModalBody\n \n} from 'reactstrap';\n\nimport { addToCart } from '../actions/cartActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { clearErrors } from '../actions/errorActions';\n\nclass ItemModal extends Component {\n    state = {\n        modal: false,\n      \n    };\n\n   \n\n    static propTypes = {\n     \n        item: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool,\n        addToCart: PropTypes.func.isRequired,\n        user: PropTypes.object.isRequired\n    }\n\n    onAddToCart = async (id, productId) => {\n        await this.props.addToCart(id, productId, 1);\n        alert ('Item added to Cart');\n    }\n\n    toggle = () => {\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"container\">\n{console.log(this.item)}\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        \n                    </ModalHeader>\n                    <ModalBody>\n                    <Card className=\"mb-4\">\n                        <CardBody>\n                            <CardTitle tag=\"h5\">{this.item.title}</CardTitle>\n                            <CardSubtitle tag=\"h6\">Rs. {this.item.price}</CardSubtitle>\n                       \n                            \n                      {/*  <CardText>{item.category}</CardText>*/}\n\n                            {this.props.isAuthenticated ? \n                                <Button\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={this.onAddToCart.bind(this, this.user._id, this.item._id)}\n                                    >Add To Cart</Button> :\n                                    null}\n                        </CardBody>\n                    </Card>\n                       \n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps, {addToCart})(ItemModal);"]},"metadata":{},"sourceType":"module"}