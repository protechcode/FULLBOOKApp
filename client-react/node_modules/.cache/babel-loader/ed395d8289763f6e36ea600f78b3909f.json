{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/client/src/components/auth/registerModal.js\";\nimport { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterModal extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state; // Crete user object\n\n      const newUser = {\n        name,\n        email,\n        password\n      }; // Attempt to register\n\n      this.props.register(newUser);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        className: \"btn btn-sm\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          onClick: this.toggle,\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 129\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [this.state.msg ? /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"danger\",\n            children: this.state.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 44\n          }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                placeholder: \"Name\",\n                className: \"mb-3\",\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                for: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                name: \"email\",\n                id: \"email\",\n                placeholder: \"Email\",\n                className: \"mb-3\",\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                for: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                name: \"password\",\n                id: \"password\",\n                placeholder: \"Password\",\n                className: \"mb-3\",\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"dark\",\n                style: {\n                  marginTop: '2rem'\n                },\n                block: true,\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModal);","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/client/src/components/auth/registerModal.js"],"names":["Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","RegisterModal","state","modal","name","email","password","msg","toggle","props","clearErrors","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","render","marginTop","mapStateToProps","isAuthenticated","auth","error","connect"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,IALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,KARJ,EASIC,OATJ,EAUIC,KAVJ,QAWO,YAXP;;;AAcA,MAAMC,aAAN,SAA4BX,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCY,KADkC,GAC1B;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,GAAG,EAAE;AALD,KAD0B;;AAAA,SAoClCC,MApCkC,GAoCzB,MAAM;AACX;AACA,WAAKC,KAAL,CAAWC,WAAX;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGH,KA1CiC;;AAAA,SA4ClCS,QA5CkC,GA4CtBC,CAAD,IAAO;AACd,WAAKF,QAAL,CAAc;AAAC,SAACE,CAAC,CAACC,MAAF,CAASV,IAAV,GAAgBS,CAAC,CAACC,MAAF,CAASC;AAA1B,OAAd;AACH,KA9CiC;;AAAA,SAgDlCC,QAhDkC,GAgDtBH,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACI,cAAF;AAEA,YAAM;AAAEb,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAA4B,KAAKJ,KAAvC,CAHc,CAKd;;AACA,YAAMgB,OAAO,GAAG;AAAEd,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAhB,CANc,CAQd;;AACA,WAAKG,KAAL,CAAWU,QAAX,CAAoBD,OAApB;AAGH,KA5DiC;AAAA;;AA8DlCE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,SAAS,EAAC,YAA/B;AAAA,+BAA4C,QAAC,OAAD;AAAS,UAAA,OAAO,EAAE,KAAKZ,MAAvB;AAA+B,UAAA,IAAI,EAAC,GAApC;AAAA,iCAAwC;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,mCAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AACI,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWC,KADvB;AAEI,QAAA,MAAM,EAAE,KAAKK,MAFjB;AAAA,gCAII,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,SAAD;AAAA,qBACK,KAAKN,KAAL,CAAWK,GAAX,gBAAkB,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,QAAb;AAAA,sBAAuB,KAAKL,KAAL,CAAWK;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAlB,GAAkE,IADvE,eAEI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,KAAKS,QAArB;AAAA,mCACI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,IAAI,EAAC,MAFT;AAGI,gBAAA,EAAE,EAAC,MAHP;AAII,gBAAA,WAAW,EAAC,MAJhB;AAKI,gBAAA,SAAS,EAAC,MALd;AAMI,gBAAA,QAAQ,EAAE,KAAKJ;AANnB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAUI,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAWI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,OADT;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,EAAE,EAAC,OAHP;AAII,gBAAA,WAAW,EAAC,OAJhB;AAKI,gBAAA,SAAS,EAAC,MALd;AAMI,gBAAA,QAAQ,EAAE,KAAKA;AANnB;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAmBI,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBJ,eAoBI,QAAC,KAAD;AACI,gBAAA,IAAI,EAAC,UADT;AAEI,gBAAA,IAAI,EAAC,UAFT;AAGI,gBAAA,EAAE,EAAC,UAHP;AAII,gBAAA,WAAW,EAAC,UAJhB;AAKI,gBAAA,SAAS,EAAC,MALd;AAMI,gBAAA,QAAQ,EAAE,KAAKA;AANnB;AAAA;AAAA;AAAA;AAAA,sBApBJ,eA4BI,QAAC,MAAD;AACI,gBAAA,KAAK,EAAC,MADV;AAEI,gBAAA,KAAK,EAAE;AAACS,kBAAAA,SAAS,EAAE;AAAZ,iBAFX;AAGI,gBAAA,KAAK,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoDH;;AAnHiC;;AAsHtC,MAAMC,eAAe,GAAIpB,KAAD,KAAY;AAChCqB,EAAAA,eAAe,EAAErB,KAAK,CAACsB,IAAN,CAAWD,eADI;AAEhCE,EAAAA,KAAK,EAAEvB,KAAK,CAACuB;AAFmB,CAAZ,CAAxB;;AAKA,eAAeC,OAAO,CAACJ,eAAD,EAAiB;AAACH,EAAAA,QAAD;AAAWT,EAAAA;AAAX,CAAjB,CAAP,CAAiDT,aAAjD,CAAf","sourcesContent":["import { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\n\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    };\n/*\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error, isAuthenticated } = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'REGISTER_FAIL'){\n                this.setState({msg: error.msg.msg});\n            }\n            else{\n                this.setState({msg:null});\n            }\n        }\n\n        // If authenticated, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }*/\n\n    toggle = () => {\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();  \n        \n        const { name, email, password } = this.state;\n\n        // Crete user object\n        const newUser = { name, email, password};\n\n        // Attempt to register\n        this.props.register(newUser);\n\n\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <Button color=\"info\" className=\"btn btn-sm\"><NavLink onClick={this.toggle} href=\"#\"><span className=\"text-dark\"><b>Register</b></span></NavLink></Button>\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        Register\n                    </ModalHeader>\n                    <ModalBody>\n                        {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>):null}\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\">Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    placeholder=\"Name\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Button\n                                    color=\"dark\"\n                                    style={{marginTop: '2rem'}}\n                                    block\n                                >Register</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\n\nexport default connect(mapStateToProps,{register, clearErrors})(RegisterModal);"]},"metadata":{},"sourceType":"module"}