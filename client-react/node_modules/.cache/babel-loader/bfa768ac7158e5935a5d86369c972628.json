{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/ItemModal.js\";\nimport { Component } from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { addToCart } from '../actions/cartActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { clearErrors } from '../actions/errorActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ItemModal extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      modal: false\n    };\n\n    this.onAddToCart = async (id, productId) => {\n      await this.props.addToCart(id, productId, 1);\n      alert('Item added to Cart');\n    };\n\n    this.toggle = () => {\n      // Clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  render() {\n    const item = this.props.item;\n    const user = this.props.user;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h5\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                tag: \"h6\",\n                children: [\"Rs. \", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CardText, {\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 24\n              }, this), this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                size: \"sm\",\n                onClick: this.onAddToCart.bind(this, this.user._id, this.item._id),\n                children: \"Add To Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nItemModal.propTypes = {\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  addToCart: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\nexport default ItemModal;","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/ItemModal.js"],"names":["Component","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","Modal","ModalHeader","ModalBody","addToCart","connect","PropTypes","clearErrors","ItemModal","state","modal","onAddToCart","id","productId","props","alert","toggle","setState","render","item","user","title","price","category","isAuthenticated","bind","_id","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport {\n    Card, CardText, CardBody, CardTitle, CardSubtitle, Button,\n    Modal,\n    ModalHeader,\n    ModalBody\n \n} from 'reactstrap';\n\nimport { addToCart } from '../actions/cartActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { clearErrors } from '../actions/errorActions';\n\nclass ItemModal extends Component {\n    state = {\n        modal: false,\n      \n    };\n\n   \n   static propTypes = {\n     \n        item: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool,\n        addToCart: PropTypes.func.isRequired,\n        user: PropTypes.object.isRequired\n    }\n\n    onAddToCart = async (id, productId) => {\n        await this.props.addToCart(id, productId, 1);\n        alert ('Item added to Cart');\n    }\n\n    toggle = () => {\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n\n\n    render(){\n        const  item  = this.props.item;\n      const user = this.props.user;\n        return(\n            <div className=\"container\">\n           \n         <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>\n                        \n                    </ModalHeader>\n                    <ModalBody>\n                    <Card className=\"mb-4\">\n                        <CardBody>\n                            <CardTitle tag=\"h5\">{item.title}</CardTitle>\n                            <CardSubtitle tag=\"h6\">Rs. {item.price}</CardSubtitle>\n                       \n                            \n                       <CardText>{item.category}</CardText>\n\n                            {this.props.isAuthenticated ? \n                                <Button\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={this.onAddToCart.bind(this, this.user._id, this.item._id)}\n                                    >Add To Cart</Button> :\n                                    null}\n                        </CardBody>\n                    </Card>\n                       \n                    </ModalBody>\n                </Modal>\n                           \n           </div>\n        );\n    }\n}\n\nexport default ItemModal;"]},"metadata":{},"sourceType":"module"}