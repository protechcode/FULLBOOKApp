{"ast":null,"code":"import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, UPDATE_ITEM, ITEMS_LOADING } from './types';\nimport { returnErrors } from './errorActions';\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get('http://localhost:4000/api/items').then(res => dispatch({\n    type: GET_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItem = item => dispatch => {\n  axios.post('http://localhost:4000/api/items', item).then(res => dispatch({\n    type: ADD_ITEM,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const deleteItem = id => dispatch => {\n  axios.delete(`http://localhost:4000/api/items/${id}`).then(res => dispatch({\n    type: DELETE_ITEM,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const updateItem = (id, item) => dispatch => {\n  axios.put(`http://localhost:4000/api/items/${id}`, item).then(res => dispatch({\n    type: UPDATE_ITEM,\n    payload: Promise.all([id, res.data])\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/Client-style/client/src/actions/itemActions.js"],"names":["axios","GET_ITEMS","ADD_ITEM","DELETE_ITEM","UPDATE_ITEM","ITEMS_LOADING","returnErrors","getItems","dispatch","setItemsLoading","get","then","res","type","payload","data","catch","err","response","status","addItem","item","post","deleteItem","id","delete","updateItem","put","Promise","all"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,WAA3C,EAAwDC,aAAxD,QAA6E,SAA7E;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAT,EAAAA,KAAK,CAACU,GAAN,CAAU,iCAAV,EACKC,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEZ,SADY;AAElBa,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIT,QAAQ,CAACF,YAAY,CAACW,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CARM;AAUP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAWb,QAAD,IAAc;AAC3CR,EAAAA,KAAK,CAACsB,IAAN,CAAW,iCAAX,EAA8CD,IAA9C,EACKV,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEX,QADY;AAElBY,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIT,QAAQ,CAACF,YAAY,CAACW,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CAPM;AASP,OAAO,MAAMI,UAAU,GAAIC,EAAD,IAAShB,QAAD,IAAc;AAC5CR,EAAAA,KAAK,CAACyB,MAAN,CAAc,mCAAkCD,EAAG,EAAnD,EACKb,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAEV,WADY;AAElBW,IAAAA,OAAO,EAAEU;AAFS,GAAD,CADzB,EAKKR,KALL,CAKWC,GAAG,IAAIT,QAAQ,CAACF,YAAY,CAACW,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CAPM;AASP,OAAO,MAAMO,UAAU,GAAG,CAACF,EAAD,EAAKH,IAAL,KAAeb,QAAD,IAAc;AAClDR,EAAAA,KAAK,CAAC2B,GAAN,CAAW,mCAAkCH,EAAG,EAAhD,EAAmDH,IAAnD,EACKV,IADL,CACUC,GAAG,IAAIJ,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAET,WADY;AAElBU,IAAAA,OAAO,EAAEc,OAAO,CAACC,GAAR,CAAY,CAACL,EAAD,EAAKZ,GAAG,CAACG,IAAT,CAAZ;AAFS,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIT,QAAQ,CAACF,YAAY,CAACW,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CAPM;AASP,OAAO,MAAMV,eAAe,GAAG,MAAM;AACjC,SAAM;AACFI,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, UPDATE_ITEM, ITEMS_LOADING } from './types';\nimport { returnErrors } from './errorActions';\n\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('http://localhost:4000/api/items')\n        .then(res => dispatch({\n            type: GET_ITEMS,\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}\n\nexport const addItem = (item) => (dispatch) => {\n    axios.post('http://localhost:4000/api/items', item)\n        .then(res => dispatch({\n            type: ADD_ITEM,\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const deleteItem = (id) => (dispatch) => {\n    axios.delete(`http://localhost:4000/api/items/${id}`)\n        .then(res => dispatch({\n            type: DELETE_ITEM,\n            payload: id\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const updateItem = (id, item) => (dispatch) => {\n    axios.put(`http://localhost:4000/api/items/${id}`, item)\n        .then(res => dispatch({\n            type: UPDATE_ITEM,\n            payload: Promise.all([id, res.data])\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const setItemsLoading = () => {\n    return{\n        type: ITEMS_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}