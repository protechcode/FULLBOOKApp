{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/Home.js\";\nimport { Component } from 'react';\nimport AppNavbar from './AppNavbar';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Container } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { addToCart } from '../actions/cartActions';\nimport ItemModal from './ItemModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      modal: false\n    };\n\n    this.onAddToCart = async (id, productId) => {\n      await this.props.addToCart(id, productId, 1);\n      alert('Item added to Cart');\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const {\n      items\n    } = this.props.item;\n    const user = this.props.user;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(ItemModal, {\n                    item: item\n                  }, item._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n                    tag: \"h5\",\n                    children: item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 29\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  tag: \"h6\",\n                  children: [\"Rs. \", item.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 29\n                }, this), this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  size: \"sm\",\n                  onClick: this.onAddToCart.bind(this, user._id, item._id),\n                  children: \"Add To Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nHome.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool,\n  addToCart: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  addToCart\n})(Home);","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/Client-style/client/src/components/Home.js"],"names":["Component","AppNavbar","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","Container","PropTypes","connect","getItems","addToCart","ItemModal","Home","state","modal","onAddToCart","id","productId","props","alert","componentDidMount","render","items","item","user","map","_id","title","price","isAuthenticated","bind","propTypes","func","isRequired","object","bool","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport AppNavbar from './AppNavbar';\nimport {Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Container} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getItems } from '../actions/itemActions';\nimport { addToCart } from '../actions/cartActions';\nimport ItemModal from './ItemModal';\n\nclass Home extends Component {\n\n    componentDidMount(){\n        this.props.getItems();\n    }\n    state = {\n        modal: false,\n      \n    };\n    static propTypes = {\n        getItems: PropTypes.func.isRequired,\n        item: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool,\n        addToCart: PropTypes.func.isRequired,\n        user: PropTypes.object.isRequired\n    }\n\n    onAddToCart = async (id, productId) => {\n        await this.props.addToCart(id, productId, 1);\n        alert ('Item added to Cart');\n    }\n\n    render(){\n        const { items } = this.props.item;\n        const user = this.props.user;\n        return (\n            <div>\n            <AppNavbar/>\n            <Container>\n                <div className=\"row\">\n                {items.map((item)=>(\n                    <div className=\"col-md-4\">\n                    <Card className=\"mb-4\">\n                        \n                  \n                        <CardBody>\n                        <a>\n                            <ItemModal item={item} key={item._id}/>\n                            <CardTitle tag=\"h5\">{item.title}</CardTitle> </a>\n                            <CardSubtitle tag=\"h6\">Rs. {item.price}</CardSubtitle>\n\n                            {this.props.isAuthenticated ? \n                                <Button\n                                    color=\"success\"\n                                    size=\"sm\"\n                                    onClick={this.onAddToCart.bind(this, user._id, item._id)}\n                                    >Add To Cart</Button> :\n                                    null}\n                        </CardBody>\n                       \n                    </Card>\n                    </div>\n                ))}\n                 </div>\n            </Container>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    item: state.item,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps, {getItems, addToCart})(Home);"]},"metadata":{},"sourceType":"module"}