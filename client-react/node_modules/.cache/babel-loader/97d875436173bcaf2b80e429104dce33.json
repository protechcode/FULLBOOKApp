{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/FULLBOOKApp/client-react/src/components/Order.js\";\nimport { Component, Fragment } from 'react';\nimport AppNavbar from './AppNavbar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOrders } from '../actions/orderActions';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Alert, Container } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Orders extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loaded: false\n    };\n\n    this.ongetOrders = async id => {\n      await this.props.getOrders(id);\n      this.state.loaded = true;\n    };\n  }\n\n  render() {\n    const user = this.props.user;\n\n    if (this.props.isAuthenticated && !this.props.order.loading && !this.state.loaded) {\n      this.ongetOrders(user._id);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: this.props.order.orders !== [] ? null : /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"info\",\n          className: \"text-center\",\n          children: \"You have no orders!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        className: \"text-center\",\n        children: \"Login to View!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), this.props.isAuthenticated && !this.props.order.loading && this.state.loaded && this.props.order.orders.length ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.props.order.orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h4\",\n                  children: [order.items.length, \" items - Total cost: Rs. \", order.bill]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      className: \"mb-2\",\n                      children: /*#__PURE__*/_jsxDEV(CardBody, {\n                        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                          tag: \"h5\",\n                          children: [item.name, \" (\", item.quantity, \" pieces)\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 56,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                          tag: \"h6\",\n                          children: [\"Rs. \", item.price, \"/piece\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 57,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nOrders.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  order: PropTypes.object.isRequired,\n  getOrders: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  order: state.order,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(Orders);","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/FULLBOOKApp/client-react/src/components/Order.js"],"names":["Component","Fragment","AppNavbar","PropTypes","connect","getOrders","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","Alert","Container","Orders","state","loaded","ongetOrders","id","props","render","user","isAuthenticated","order","loading","_id","orders","length","map","items","bill","item","name","quantity","price","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import { Component, Fragment } from 'react';\nimport AppNavbar from './AppNavbar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getOrders } from '../actions/orderActions';\nimport {Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Alert, Container} from 'reactstrap';\n\nclass Orders extends Component {\n\n    state = {\n        loaded: false,\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        user: PropTypes.object.isRequired,\n        order: PropTypes.object.isRequired,\n        getOrders: PropTypes.func.isRequired\n    }\n\n    ongetOrders = async (id) => {\n        await this.props.getOrders(id);\n        this.state.loaded = true;\n    }\n\n    render(){\n        const user = this.props.user;\n        if(this.props.isAuthenticated && !this.props.order.loading && !this.state.loaded){\n            this.ongetOrders(user._id);\n        }\n        return(\n            <div>\n                <AppNavbar/>\n                {this.props.isAuthenticated ?\n                    <Fragment>\n                        {this.props.order.orders!==[] ? null :\n                            <Alert color=\"info\" className=\"text-center\">You have no orders!</Alert>\n                        }\n                    </Fragment>\n                    : <Alert color=\"danger\" className=\"text-center\">Login to View!</Alert>\n                }\n\n                {this.props.isAuthenticated && !this.props.order.loading && this.state.loaded && this.props.order.orders.length?\n                    <Container>\n                        <div className=\"row\">\n                            {this.props.order.orders.map((order)=>(\n                                <div className=\"col-md-12\">\n                                    <Card>\n                                        <CardBody>\n                                            <CardTitle tag=\"h4\">{order.items.length} items - Total cost: Rs. {order.bill}</CardTitle>\n                                            <div className=\"row\">\n                                            {order.items.map((item)=>(\n                                                <div className=\"col-md-4\">\n                                                    <Card className=\"mb-2\">\n                                                        <CardBody>\n                                                            <CardTitle tag=\"h5\">{item.name} ({item.quantity} pieces)</CardTitle>\n                                                            <CardSubtitle tag=\"h6\">Rs. {item.price}/piece</CardSubtitle>\n                                                        </CardBody>\n                                                    </Card>\n                                                </div>\n                                            ))}\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                    <br/>\n                                </div>\n                                \n                            ))}\n                        </div>\n                    </Container>\n                :null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n})\n\nexport default connect(mapStateToProps, {getOrders})(Orders);"]},"metadata":{},"sourceType":"module"}