{"ast":null,"code":"import { GET_ITEMS, ADD_ITEM, UPDATE_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\nconst initialState = {\n  items: [],\n  loading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ITEM:\n      ret;\n\n    case GET_ITEMS:\n      return { ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        items: [action.payload, ...state.items]\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n\n    case UPDATE_ITEM:\n      const {\n        id,\n        data\n      } = action.payload;\n      return { ...state,\n        items: state.items.map(item => {\n          if (item._id === id) {\n            item = data;\n          }\n        })\n      };\n\n    case ITEMS_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/Client-style/client/src/reducers/itemReducer.js"],"names":["GET_ITEMS","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","ITEMS_LOADING","initialState","items","loading","state","action","type","GET_ITEM","ret","payload","filter","item","_id","id","data","map"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,WAA3C,EAAwDC,aAAxD,QAA6E,kBAA7E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,YAAoC;AAAA,MAA3BC,KAA2B,uEAArBH,YAAqB;AAAA,MAAPI,MAAO;;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,QAAL;AACIC,MAAAA,GAAG;;AACP,SAAKZ,SAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAFZ;AAGFN,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAMJ,SAAKN,QAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFF,QAAAA,KAAK,EAAE,CAACG,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACF,KAA1B;AAFL,OAAN;;AAKJ,SAAKH,WAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEFF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAWP,MAAM,CAACI,OAA7C;AAFL,OAAN;;AAKJ,SAAKX,WAAL;AACI,YAAM;AAAEe,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeT,MAAM,CAACI,OAA5B;AACA,aAAM,EACF,GAAGL,KADD;AAEFF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYa,GAAZ,CAAgBJ,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,KAAWC,EAAd,EAAiB;AACbF,YAAAA,IAAI,GAAGG,IAAP;AACH;AACJ,SAJM;AAFL,OAAN;;AASJ,SAAKd,aAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFD,QAAAA,OAAO,EAAE;AAFP,OAAN;;AAKJ;AACI,aAAOC,KAAP;AAxCR;AA0CH","sourcesContent":["import { GET_ITEMS, ADD_ITEM, UPDATE_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\n\nconst initialState = {\n    items: [],\n    loading: false\n}\n\nexport default function(state=initialState, action){\n    switch(action.type){\n        case GET_ITEM :\n            ret\n        case GET_ITEMS:\n            return{\n                ...state,\n                items: action.payload,\n                loading: false\n            }\n        \n        case ADD_ITEM:\n            return{\n                ...state,\n                items: [action.payload, ...state.items]\n            }\n        \n        case DELETE_ITEM:\n            return{\n                ...state,\n                items: state.items.filter(item => item._id!==action.payload)                \n            };\n        \n        case UPDATE_ITEM:\n            const { id, data } = action.payload;\n            return{\n                ...state,\n                items: state.items.map(item => {\n                    if(item._id===id){\n                        item = data;\n                    }\n                })\n            }\n\n        case ITEMS_LOADING:\n            return{\n                ...state,\n                loading: true\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}