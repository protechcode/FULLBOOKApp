{"ast":null,"code":"var _jsxFileName = \"/home/salma/Rendu/Final-Project/backend/FULLBOOKApp/client-react/src/components/CartModal.js\";\nimport { Component, Fragment } from 'react';\nimport AppNavbar from './AppNavbar';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Alert, Container } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCart, deleteFromCart, updateCart } from '../actions/cartActions';\nimport Checkout from './Checkout';\nimport { checkout } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loaded: false\n    };\n\n    this.getCartItems = async id => {\n      await this.props.getCart(id);\n      this.state.loaded = true;\n    };\n\n    this.onDeleteFromCart = (id, itemId) => {\n      this.props.deleteFromCart(id, itemId);\n    };\n\n    this.onUpdateQuantity = async (userId, productId, qty) => {\n      await this.props.updateCart(userId, productId, qty);\n    };\n  }\n\n  render() {\n    const user = this.props.user;\n\n    if (this.props.isAuthenticated && !this.props.cart.loading && !this.state.loaded) {\n      this.getCartItems(user._id);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), this.props.isAuthenticated ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: this.props.cart.cart ? null : /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"info\",\n          className: \"text-center\",\n          children: \"Your cart is empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        className: \"text-center\",\n        children: \"Login to View!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), this.props.isAuthenticated && !this.props.cart.loading && this.state.loaded && this.props.cart.cart ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [this.props.cart.cart.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h5\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  tag: \"h6\",\n                  children: [\"Rs. \", item.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: qtyBox,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: { ...qtyBtn,\n                      border: \"1px solid red\",\n                      color: \"Red\"\n                    },\n                    onClick: () => this.onUpdateQuantity(user._id, item.productId, item.quantity - 1),\n                    children: \"-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(CardText, {\n                    children: [\"Quantity - \", item.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: { ...qtyBtn,\n                      border: \"1px solid green\",\n                      color: \"green\"\n                    },\n                    onClick: () => this.onUpdateQuantity(user._id, item.productId, item.quantity + 1),\n                    children: \"+1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  onClick: this.onDeleteFromCart.bind(this, user._id, item.productId),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                  tag: \"h5\",\n                  children: [\"Total Cost = Rs. \", this.props.cart.cart.bill]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Checkout, {\n                  user: user._id,\n                  amount: this.props.cart.cart.bill,\n                  checkout: this.props.checkout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCart.propTypes = {\n  getCart: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  addToCart: PropTypes.func.isRequired,\n  deleteFromCart: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  cart: PropTypes.object.isRequired,\n  checkout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  cart: state.cart,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nconst qtyBox = {\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  border: \"1px solid #aaa\",\n  borderRadius: \"5px\",\n  paddingTop: \"5px\",\n  paddingBottom: \"5px\",\n  marginBottom: \"5px\"\n};\nconst qtyBtn = {\n  paddingLeft: \"5px\",\n  paddingRight: \"5px\",\n  borderRadius: \"5px\",\n  marginBottom: \"0px\"\n};\nexport default connect(mapStateToProps, {\n  getCart,\n  updateCart,\n  deleteFromCart,\n  checkout\n})(Cart);","map":{"version":3,"sources":["/home/salma/Rendu/Final-Project/backend/FULLBOOKApp/client-react/src/components/CartModal.js"],"names":["Component","Fragment","AppNavbar","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","Alert","Container","PropTypes","connect","getCart","deleteFromCart","updateCart","Checkout","checkout","Cart","state","loaded","getCartItems","id","props","onDeleteFromCart","itemId","onUpdateQuantity","userId","productId","qty","render","user","isAuthenticated","cart","loading","_id","items","map","item","name","price","qtyBox","qtyBtn","border","color","quantity","bind","bill","propTypes","func","isRequired","bool","addToCart","object","mapStateToProps","auth","display","justifyContent","borderRadius","paddingTop","paddingBottom","marginBottom","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import { Component, Fragment } from 'react';\nimport AppNavbar from './AppNavbar';\nimport {Card, CardText, CardBody, CardTitle, CardSubtitle, Button, Alert, Container} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCart, deleteFromCart, updateCart } from '../actions/cartActions';\nimport Checkout from './Checkout';\nimport { checkout } from '../actions/orderActions'\n;\nclass Cart extends Component {\n\n    state = {\n        loaded: false,\n    }\n\n    static propTypes = {\n        getCart: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n        addToCart: PropTypes.func.isRequired,\n        deleteFromCart: PropTypes.func.isRequired,\n        user: PropTypes.object.isRequired,\n        cart: PropTypes.object.isRequired,\n        checkout: PropTypes.func.isRequired\n    }\n\n    getCartItems = async (id) => {\n        await this.props.getCart(id);\n        this.state.loaded = true;\n    }\n\n    onDeleteFromCart = (id, itemId) => {\n        this.props.deleteFromCart(id, itemId);\n    } \n    onUpdateQuantity = async (userId, productId, qty) => {\n      await this.props.updateCart(userId, productId, qty);\n    }\n    \n    render(){\n        const user = this.props.user;\n        if(this.props.isAuthenticated && !this.props.cart.loading && !this.state.loaded){\n            this.getCartItems(user._id);\n        }\n        return(\n            <div>\n                <AppNavbar/>\n                {this.props.isAuthenticated ?\n                    <Fragment>\n                        {this.props.cart.cart ? null :\n                            <Alert color=\"info\" className=\"text-center\">Your cart is empty!</Alert>\n                        }\n                    </Fragment>\n                    : <Alert color=\"danger\" className=\"text-center\">Login to View!</Alert>\n                }  \n        \n            \n                {this.props.isAuthenticated && !this.props.cart.loading && this.state.loaded && this.props.cart.cart?\n                <Container>\n                    <div className=\"row\">\n                        {this.props.cart.cart.items.map((item)=>(\n                            <div className=\"col-md-4\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle tag=\"h5\">{item.name}</CardTitle>\n                                <CardSubtitle tag=\"h6\">Rs. {item.price}</CardSubtitle>\n                                <div style={qtyBox}>\n                                  <p style={{...qtyBtn, border:\"1px solid red\", color: \"Red\"}} onClick={() => this.onUpdateQuantity(user._id, item.productId, item.quantity - 1)}>\n                                    -1\n                                  </p>\n                                  <CardText>Quantity - {item.quantity}</CardText>\n                                  <p style={{...qtyBtn, border:\"1px solid green\", color: \"green\"}} onClick={() => this.onUpdateQuantity(user._id, item.productId, item.quantity + 1)}>\n                                    +1\n                                  </p>\n                                </div>\n                                <Button color=\"danger\" onClick={this.onDeleteFromCart.bind(this, user._id, item.productId)}>Delete</Button>\n                            </CardBody>\n                        </Card>\n                        <br/>\n                        </div>\n                        ))}\n                        <div class=\"col-md-12\">\n                        <Card>\n                            <CardBody>\n                                <CardTitle tag=\"h5\">Total Cost = Rs. {this.props.cart.cart.bill}</CardTitle>\n                                <Checkout\n                                    user={user._id}\n                                    amount={this.props.cart.cart.bill}\n                                    checkout={this.props.checkout}\n                                />                   \n                            </CardBody>\n                        </Card>\n                        </div>\n                    </div>\n                </Container>\n                    :null}\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cart,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n})\n\nconst qtyBox = {display: \"flex\", justifyContent: \"space-evenly\", border: \"1px solid #aaa\", borderRadius: \"5px\", paddingTop: \"5px\", paddingBottom: \"5px\", marginBottom: \"5px\"};\nconst qtyBtn = {paddingLeft: \"5px\", paddingRight: \"5px\", borderRadius: \"5px\", marginBottom: \"0px\"};\n\nexport default connect(mapStateToProps, {getCart, updateCart, deleteFromCart, checkout})(Cart);"]},"metadata":{},"sourceType":"module"}